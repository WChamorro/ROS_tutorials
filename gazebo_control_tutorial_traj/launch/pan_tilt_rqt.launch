<?xml version="1.0" ?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <!-- HERE GUI IS SET TO FALSE -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="$(find xacro)/xacro $(find mastering_ros_robot_description_pkg)/urdf/pan_tilt_complete.xacro" />
  
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model pan_tilt -param robot_description -z 0.01 "/> <!-- -J tilt_joint -4.5"/--> 

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find actions_tutorial)/config/pantilt_joint_position_full.yaml" command="load"/>


  <!-- load the controllers -->
  <node name="trajectory_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/pan_tilt" args="arm_joint_trajectory_controller"/>

  <!--node name="joint_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/pan_tilt" args="pan_position_controller
                                             tilt_position_controller" /-->

  <node name="joint_state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" ns="/pan_tilt" args="joint_state_controller" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
        <remap from="/joint_states" to="/pan_tilt/joint_states" />
  </node>
  
  
  <rosparam file="$(find actions_tutorial)/config/gazebo_ros_control_params.yaml" command="load"/>

  <node name="pan_tilt" pkg="rqt_gui" type="rqt_gui" respawn="false" args="--perspective-file $(find gazebo_control_tutorial)/config/tutorial10.perspective" output="screen" />
  
</launch>
